{
  "abstract" : [
    {
      "text" : "Combines this transformation with another transformation.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RemoveHierarchyTransformation",
        "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RemoveHierarchyTransformation\/RenderNodeTransforming-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RemoveHierarchyTransformation\/then(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "SwiftDocC",
    "externalID" : "s:9SwiftDocC22RenderNodeTransformingPAAE4thenyAA0cD25TransformationCompositionVAaB_pF::SYNTHESIZED::s:9SwiftDocC29RemoveHierarchyTransformationV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "then"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:9SwiftDocC22RenderNodeTransformingP",
        "text" : "RenderNodeTransforming"
      },
      {
        "kind" : "text",
        "text" : ") -> "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:9SwiftDocC35RenderNodeTransformationCompositionV",
        "text" : "RenderNodeTransformationComposition"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftDocC"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "then(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "then"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "otherTransformation"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RenderNodeTransforming",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:9SwiftDocC22RenderNodeTransformingP",
              "text" : "RenderNodeTransforming"
            },
            {
              "kind" : "text",
              "text" : ") -> "
            },
            {
              "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RenderNodeTransformationComposition",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:9SwiftDocC35RenderNodeTransformationCompositionV",
              "text" : "RenderNodeTransformationComposition"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A new transformation that applies the two transformations, one after another.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The other transformation to apply after the receiver.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "otherTransformation"
        }
      ]
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftdocc\/removehierarchytransformation\/then(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftDocC/documentation/SwiftDocC": {
  "abstract" : [
    {
      "text" : "Combine code comments with markup prose to produce structured, semantic documentation.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftDocC",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc"
},
"doc://SwiftDocC/documentation/SwiftDocC/RemoveHierarchyTransformation": {
  "abstract" : [
    {
      "text" : "This transformation removes the hierarchy information from a render node JSON,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "also getting rid of the dead references. Itâ€™s useful to save space when the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "hierarchy information is not a key information to preserve.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RemoveHierarchyTransformation"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RemoveHierarchyTransformation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RemoveHierarchyTransformation"
    }
  ],
  "role" : "symbol",
  "title" : "RemoveHierarchyTransformation",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/removehierarchytransformation"
},
"doc://SwiftDocC/documentation/SwiftDocC/RemoveHierarchyTransformation/RenderNodeTransforming-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RemoveHierarchyTransformation\/RenderNodeTransforming-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "RenderNodeTransforming Implementations",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/removehierarchytransformation\/rendernodetransforming-implementations"
},
"doc://SwiftDocC/documentation/SwiftDocC/RemoveHierarchyTransformation/then(_:)": {
  "abstract" : [
    {
      "text" : "Combines this transformation with another transformation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "then"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9SwiftDocC22RenderNodeTransformingP",
      "text" : "RenderNodeTransforming"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9SwiftDocC35RenderNodeTransformationCompositionV",
      "text" : "RenderNodeTransformationComposition"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RemoveHierarchyTransformation\/then(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "then(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/removehierarchytransformation\/then(_:)"
},
"doc://SwiftDocC/documentation/SwiftDocC/RenderNodeTransformationComposition": {
  "abstract" : [
    {
      "text" : "A transformation that applies two transformations, one after the other.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RenderNodeTransformationComposition"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RenderNodeTransformationComposition",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RenderNodeTransformationComposition"
    }
  ],
  "role" : "symbol",
  "title" : "RenderNodeTransformationComposition",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/rendernodetransformationcomposition"
},
"doc://SwiftDocC/documentation/SwiftDocC/RenderNodeTransforming": {
  "abstract" : [
    {
      "text" : "A type that modifies a render node.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RenderNodeTransforming"
    }
  ],
  "identifier" : "doc:\/\/SwiftDocC\/documentation\/SwiftDocC\/RenderNodeTransforming",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RenderNodeTransforming"
    }
  ],
  "role" : "symbol",
  "title" : "RenderNodeTransforming",
  "type" : "topic",
  "url" : "\/documentation\/swiftdocc\/rendernodetransforming"
}
}
}